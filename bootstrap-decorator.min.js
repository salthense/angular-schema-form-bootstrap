function elementInViewport(e){var t=e.getBoundingClientRect();return t.top>0&&t.top<window.innerHeight}function markActiveTab(){var e=!1;$(".panel-section").each(function(t){if(elementInViewport($(".panel-section")[t])&&!e){$(".btn-jump-to.active").removeClass("active");var s=$(".panel-section")[t].getAttribute("class").split(" ");s.forEach(function(t){t.indexOf("panel-"+$(".list-group-item-info .active")[0].innerHTML.trim().toLowerCase())>=0&&($("button."+t).addClass("active"),e=!0)})}})}angular.module("schemaForm").run(["$templateCache",function(e){e.put("decorators/bootstrap/actions-trcl.html",'<div class="btn-group schema-form-actions {{form.htmlClass}}" ng-class="{{form.ngClass}}" ng-transclude=""></div>'),e.put("decorators/bootstrap/actions.html",'<div class="btn-group schema-form-actions {{form.htmlClass}}" ng-class="{{form.ngClass}}"><input ng-repeat-start="item in form.items" type="submit" class="btn {{ item.style || \'btn-default\' }} {{form.fieldHtmlClass}}" value="{{item.title}}" ng-if="item.type === \'submit\'"> <button ng-repeat-end="" class="btn {{ item.style || \'btn-default\' }} {{form.fieldHtmlClass}}" type="button" ng-disabled="form.readonly" ng-if="item.type !== \'submit\'" ng-click="buttonClick($event,item)"><span ng-if="item.icon" class="{{item.icon}}"></span>{{item.title}}</button></div>'),e.put("decorators/bootstrap/array.html",'<div class="schema-form-array {{form.htmlClass}}" ng-class="{{form.ngClass}}" sf-field-model="sf-new-array" sf-new-array=""><label class="control-label" ng-show="showTitle()">{{ form.title }}</label><ol class="list-group" sf-field-model="" ui-sortable="form.sortOptions"><li class="list-group-item {{form.fieldHtmlClass}}" schema-form-array-items="" sf-field-model="ng-repeat" ng-repeat="item in $$value$$ track by $index"><button ng-hide="form.readonly || form.remove === null" ng-click="deleteFromArray($index)" ng-disabled="form.schema.minItems >= modelArray.length" style="position: relative; z-index: 20;" type="button" class="close pull-right"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button></li></ol><div class="clearfix" style="padding: 15px;" ng-model="modelArray" schema-validate="form"><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div><button ng-hide="form.readonly || form.add === null" ng-click="appendToArray()" ng-disabled="form.schema.maxItems <= modelArray.length" type="button" class="btn {{ form.style.add || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</button></div></div>'),e.put("decorators/bootstrap/checkbox.html",'<div class="checkbox schema-form-checkbox {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="{{form.labelHtmlClass}}"><input type="checkbox" sf-changed="form" ng-disabled="form.readonly" sf-field-model="" schema-validate="form" class="{{form.fieldHtmlClass}}" name="{{form.key.slice(-1)[0]}}"> <span ng-bind-html="form.title"></span> <span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-warning-sign\': hasWarning() }" aria-hidden="true"></span></label><div class="help-block" sf-message="form.description"></div></div>'),e.put("decorators/bootstrap/checkboxes.html",'<div sf-field-model="sf-new-array" sf-new-array="" class="form-group schema-form-checkboxes {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" sf-field-model="" schema-validate="form" ng-show="showTitle()">{{form.title}}</label><div class="checkbox" ng-repeat="val in titleMapValues track by $index"><label><input type="checkbox" ng-disabled="form.readonly" sf-changed="form" class="{{form.fieldHtmlClass}}" ng-model="titleMapValues[$index]" name="{{form.key.slice(-1)[0]}}"> <span ng-bind-html="form.titleMap[$index].name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("decorators/bootstrap/default.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label> <input ng-show="form.key" type="{{form.type}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" sf-field-model="" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"> <span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError(), \'glyphicon-warning-sign\': hasWarning() }" aria-hidden="true"></span> <span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}" class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span><div class="help-block" sf-message="form.description"></div></div>'),e.put("decorators/bootstrap/exmodule.html",'<div sf-field-model="sf-exmodule" sf-exmodule="" class="{{form.outerClass}}"><div class="{{form.htmlClass}}"><div class="sfExmodule" ng-click="clickEvent()"><span ng-if="form.labelClass" ng-class="form.labelClass"></span> {{ form.label }}</div></div></div>'),e.put("decorators/bootstrap/fieldset.html",'<div class="decorator-fieldset {{form.outerClass}}"><legend ng-class="{\'sr-only\': !showTitle() }">{{ form.title }}</legend><fieldset ng-disabled="form.readonly" class="sf-content schema-form-fieldset {{form.htmlClass}}" ng-class="{{form.ngClass}}"><div class="help-block" ng-show="form.description" ng-bind-html="form.description"></div></fieldset></div>'),e.put("decorators/bootstrap/help.html",'<div class="helpvalue schema-form-helpvalue {{form.htmlClass}}" ng-class="{{form.ngClass}}" ng-bind-html="form.helpvalue"></div>'),e.put("decorators/bootstrap/link.html",'<div class="schema-form-link {{form.outerClass}}" ng-class="{{form.ngClass}}" sf-field-model="" sf-link=""><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label><div><input ng-model="inputValue" ng-change="change()" typeahead-on-select="setLink($item, $model, $label, $event, $index)"> <span class="glyphicon" ng-class="{\'glyphicon-remove\': !isValueSet, \'glyphicon-ok\': isValueSet}"></span></div></div>'),e.put("decorators/bootstrap/linkRepresentation.html",'<div sf-field-model="" sf-link-representation=""><div ng-if="representationDatas !== undefined" ng-include="\'types/\' + recordTitle + \'/\' + template"></div></div>'),e.put("decorators/bootstrap/matrix.html",'<div class="schema-form-matrix {{form.htmlClass}}" ng-class="{{form.ngClass}}" sf-field-model="sf-matrix" sf-matrix=""><label class="control-label" ng-show="showTitle()">{{ form.title }}</label><table class="table"><thead><tr><th></th><th ng-repeat="column in matrixColumns">{{column}}</th></tr></thead><tbody><tr ng-repeat="row in matrixRows track by $index" ng-class="rowClass($index)" class="matrix-row-{{row | alphaNumeric}}"><td colspan="{{1 + matrixColumns.length}}" ng-show="!activeGroups[getGroupForRow($index).group - 1] && isFirstInGroup($index)"><button type="button" name="button" ng-click="activeGroups[getGroupForRow($index).group - 1] = true"><span class="glyphicon glyphicon-plus"></span></button></td><td ng-show="activeGroups[getGroupForRow($index).group - 1]">{{row}}</td><td ng-show="activeGroups[getGroupForRow($parent.$index).group - 1]" ng-repeat="column in matrixColumns"><input type="checkbox" ng-disabled="form.readonly" ng-model="matrixElements[matrixMap[row][column]].selected" ng-change="setGroupState($parent.$index, matrixElements[matrixMap[row][column]].selected)" class="{{form.fieldHtmlClass}}"></td></tr></tbody></table></div>'),e.put("decorators/bootstrap/measurement.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label> <button class="btn btn-default" type="button" data-toggle="modal" data-target="#measurementModal{{form.key.slice(-1)[0]}}">{{::form.i18n.insertDataBtn || \'insert data\'}}</button> <input ng-show="form.key" type="number" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" sf-field-model="" ng-disabled="true" measurements="" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"> <span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError(), \'glyphicon-warning-sign\': hasWarning() }" aria-hidden="true"></span> <span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}" class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span><div class="help-block" sf-message="form.description"></div><div id="measurementModal{{form.key.slice(-1)[0]}}" class="modal fade" tabindex="-1"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button><div class="modal-title">{{::form.i18n.modalTitle || \'please insert data for\'}}: {{form.title}}</div></div><div class="modal-body"><div class="row"><div id="measurementContainer{{form.key.slice(-1)[0]}}"><div ng-repeat="i in [] | range: form.measurementOptions.fields" class="col-md-6"><input class="form-control" type="text" ng-model="$parent.measurements[i]" ng-change="calculateValue(form)"></div></div></div></div><div class="modal-footer"><button id="resetBtn{{form.key.slice(-1)[0]}}" class="btn btn-default" type="button" ng-click="reset(form)">{{::form.i18n.resetDataBtn || \'reset\'}}</button></div></div></div></div></div>'),e.put("decorators/bootstrap/panel.html",'<div ng-disabled="form.readonly" class="block-{{form.title}} panel schema-form-fieldset {{form.htmlClass}} panel-section" ng-class="{{form.ngClass}}"><div class="panel-heading" ng-class="{\'sr-only\': !showTitle() }">{{ form.title }}</div><div class="help-block" ng-show="form.description" ng-bind-html="form.description"></div><div class="sf-content panel-body"></div></div>'),e.put("decorators/bootstrap/radio-buttons.html",'<div class="form-group schema-form-radiobuttons {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><div><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label></div><div class="btn-group"><label sf-field-model="replaceAll" class="btn {{ (item.value === $$value$$) ? form.style.selected || \'btn-default\' : form.style.unselected || \'btn-default\'; }}" ng-class="{ active: item.value === $$value$$ }" ng-repeat="item in form.titleMap"><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" style="display: none;" ng-disabled="form.readonly" sf-field-model="" schema-validate="form" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("decorators/bootstrap/radios-inline.html",'<div class="form-group schema-form-radios-inline {{form.htmlClass}}" ng-class="{{form.ngClass}}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()" sf-field-model="" schema-validate="form">{{form.title}}</label><div><label class="radio-inline" ng-repeat="item in form.titleMap"><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" ng-disabled="form.readonly" sf-field-model="" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("decorators/bootstrap/radios.html",'<div class="form-group schema-form-radios {{form.htmlClass}}" ng-class="{{form.ngClass}}"><label class="control-label {{form.labelHtmlClass}}" sf-field-model="" schema-validate="form" ng-show="showTitle()">{{form.title}}</label><div class="radio" ng-repeat="item in form.titleMap"><label><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" ng-disabled="form.readonly" sf-field-model="" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("decorators/bootstrap/relation.html",'<div class="schema-form-relation {{form.outerClass}}" ng-class="{{form.ngClass}}" sf-field-model="sf-relation" sf-relation=""><label class="control-label" ng-show="showTitle()">{{ form.title }}</label><div ng-if="records.length === 0">Keine Verknüpfungen gefunden</div><div ng-if="records.length > 0" class="{{form.htmlClass}}" ng-repeat="record in records"><div ng-click="editRecord(record)" ng-include="\'types/\' + recordTitle + \'/recordRepresentation.html\'" class="{{form.innerClass}}"></div></div></div>'),e.put("decorators/bootstrap/section.html",'<div class="schema-form-section {{form.htmlClass}}" ng-class="{{form.ngClass}}"></div>'),e.put("decorators/bootstrap/select.html",'<div class="form-group {{form.htmlClass}} schema-form-select" ng-class="{{form.ngClass}}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><select sf-field-model="" ng-disabled="form.readonly" sf-changed="form" class="form-control {{form.fieldHtmlClass}}" schema-validate="form" ng-options="item.value as item.name group by item.group for item in form.titleMap" name="{{form.key.slice(-1)[0]}}"></select><span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-warning-sign\': hasWarning() }" aria-hidden="true"></span><div class="help-block" sf-message="form.description"></div></div>'),e.put("decorators/bootstrap/submit.html",'<div class="form-group schema-form-submit {{form.htmlClass}}" ng-class="{{form.ngClass}}"><input type="submit" class="btn {{ form.style || \'btn-primary\' }} {{form.fieldHtmlClass}}" value="{{form.title}}" ng-disabled="form.readonly" ng-if="form.type === \'submit\'"> <button class="btn {{ form.style || \'btn-default\' }}" type="button" ng-click="buttonClick($event,form)" ng-disabled="form.readonly" ng-if="form.type !== \'submit\'"><span ng-if="form.icon" class="{{form.icon}}"></span> {{form.title}}</button></div>'),e.put("decorators/bootstrap/tabarray.html",'<div ng-init="selected = { tab: 0 }" ng-model="modelArray" schema-validate="form" sf-field-model="sf-new-array" sf-new-array="" ng-class="{{form.ngClass}}" class="clearfix schema-form-tabarray schema-form-tabarray-{{form.tabType || \'left\'}} {{form.htmlClass}}"><div ng-if="!form.tabType || form.tabType !== \'right\'" ng-class="{\'col-xs-3\': !form.tabType || form.tabType === \'left\'}"><ul class="nav nav-tabs" ng-class="{ \'tabs-left\': !form.tabType || form.tabType === \'left\'}"><li sf-field-model="ng-repeat" ng-repeat="item in $$value$$ track by $index" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a></li><li ng-hide="form.readonly" ng-disabled="form.schema.maxItems <= modelArray.length" ng-click="$event.preventDefault() || (selected.tab = appendToArray().length - 1)"><a href="#"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</a></li></ul></div><div ng-class="{\'col-xs-9\': !form.tabType || form.tabType === \'left\' || form.tabType === \'right\'}"><div class="tab-content {{form.fieldHtmlClass}}"><div class="tab-pane clearfix tab{{selected.tab}} index{{$index}}" sf-field-model="ng-repeat" ng-repeat="item in $$value$$ track by $index" ng-show="selected.tab === $index" ng-class="{active: selected.tab === $index}"><div schema-form-array-items=""></div><button ng-hide="form.readonly" ng-click="selected.tab = deleteFromArray($index).length - 1" ng-disabled="form.schema.minItems >= modelArray.length" type="button" class="btn {{ form.style.remove || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-trash"></i> {{ form.remove || \'Remove\'}}</button></div><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div></div></div><div ng-if="form.tabType === \'right\'" class="col-xs-3"><ul class="nav nav-tabs tabs-right"><li sf-field-model="ng-repeat" ng-repeat="item in $$value$$ track by $index" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a></li><li ng-hide="form.readonly" ng-disabled="form.schema.maxItems <= modelArray.length" ng-click="$event.preventDefault() || (selected.tab = appendToArray().length - 1)"><a href="#"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</a></li></ul></div>'),e.put("decorators/bootstrap/tabs.html",'<div ng-init="selected = { tab: 0 }" class="schema-form-tabs {{form.htmlClass}}" ng-class="{{form.ngClass}}"><ul class="nav nav-tabs"><li ng-repeat="tab in form.tabs" ng-disabled="form.readonly" ng-click="$event.preventDefault() || (selected.tab = $index)" class="panel-{{schema.title.toLowerCase()}}-{{tab.title.toLowerCase()}}" ng-class="{active: selected.tab === $index}"><a href="#">{{ tab.title }}</a></li></ul><div class="tab-content {{form.fieldHtmlClass}}"></div></div>'),e.put("decorators/bootstrap/textarea.html",'<div class="form-group has-feedback {{form.htmlClass}} schema-form-textarea" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label> <textarea class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" sf-changed="form" placeholder="{{form.placeholder}}" ng-disabled="form.readonly" sf-field-model="" schema-validate="form" name="{{form.key.slice(-1)[0]}}"></textarea> <span class="help-block" sf-message="form.description"></span></div>')}]);var app=angular.module("schemaForm");app.config(["schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,t,s){var a="decorators/bootstrap/",l=t.builders.simpleTransclusion,r=t.builders.ngModelOptions,o=t.builders.ngModel,i=t.builders.sfField,n=t.builders.condition,m=t.builders.array,d=t.builders.attributes,c=t.builders.typeahead,f=t.builders.link,p=t.builders.measurement,b=t.builders.addon,u=function(e){if(e.form.tabs&&e.form.tabs.length>0){var t=e.fieldFrag.querySelector(".tab-content");e.form.tabs.forEach(function(s,a){var l=document.createElement("div");l.className="tab-pane",l.setAttribute("ng-disabled","form.readonly"),l.setAttribute("ng-show","selected.tab === "+a),l.setAttribute("ng-class","{active: selected.tab === "+a+"}");var r=e.build(s.items,e.path+".tabs["+a+"].items",e.state);if(s.jumpToNavigation){$(t).addClass("contains-jump-to-navigation");var o=document.createElement("div");o.className="btn-group-wrap";var i=document.createElement("div");i.setAttribute("class","btn-group affix-btn-group"),s.items.forEach(function(e,t){var l=r.childNodes[t],o=document.createElement("button");if(o.setAttribute("type","button"),e.title&&"<"!=e.title.substr(0,1)){var n="btn btn-info btn-jump-to jump-to-panel-"+t+" panel-"+$(".list-group-item-info .active")[0].innerHTML.trim().toLowerCase().replace(/\W+/g,"-")+"-"+e.title.toLowerCase().replace(/\W+/g,"-");0==a&&0==t&&(n="active "+n),o.setAttribute("class",n)}else o.setAttribute("class","btn btn-info btn-jump-to jump-to-panel-"+t);o.textContent=e.title,o.addEventListener("click",function(){window.scrollTo(l.offsetLeft,l.offsetTop-s.jumpToNavigation.offset)});var m=document.createElement("span");m.appendChild(o),i.appendChild(m)});var n=document.createElement("button");n.setAttribute("type","button"),n.setAttribute("class","btn btn-info btn-jump-to btn-jump-to-top");var m=document.createElement("span");m.setAttribute("class","glyphicon glyphicon-chevron-up"),n.appendChild(m),n.addEventListener("click",function(){window.scrollTo(0,0)});var d=document.createElement("span");d.appendChild(n),i.appendChild(d);var c=document.createElement("button");c.setAttribute("type","button"),c.setAttribute("class","btn btn-info btn-jump-to btn-jump-to-bottom");var f=document.createElement("span");f.setAttribute("class","glyphicon glyphicon-chevron-down"),c.appendChild(f),c.addEventListener("click",function(){window.scrollTo(0,document.body.offsetHeight)});var p=document.createElement("span");p.appendChild(c),i.appendChild(p),o.appendChild(i),l.insertBefore(o,l.firstChild),s.jumpToNavigation.affix&&$(i).affix({offset:{top:function(){return $(i).parent().offset().top-s.jumpToNavigation.offset}}}).on("affix.bs.affix",function(){o.style.height=$(o).height()+"px"})}l.appendChild(r),t.appendChild(l)})}},h=function(e){var t=e.build(e.form.items,e.path+".items",e.state),s=e.fieldFrag.firstChild.querySelector(".sf-content")||e.fieldFrag.firstChild;s.appendChild(t)},g=[i,o,r,n,d,c,b];e.defineDecorator("bootstrapDecorator",{textarea:{template:a+"textarea.html",builder:g},fieldset:{template:a+"fieldset.html",builder:[i,h,n]},panel:{template:a+"panel.html",builder:[i,h,n]},array:{template:a+"array.html",builder:[i,r,o,m,n]},matrix:{template:a+"matrix.html",builder:[i,r,o,n]},relation:{template:a+"relation.html",builder:[i,r,o,n]},link:{template:a+"link.html",builder:[i,r,o,n,f]},linkRepresentation:{template:a+"linkRepresentation.html",builder:[i,r,o,n]},exmodule:{template:a+"exmodule.html",builder:[i,r,o,n]},tabarray:{template:a+"tabarray.html",builder:[i,r,o,m,n]},tabs:{template:a+"tabs.html",builder:[i,r,u,n]},section:{template:a+"section.html",builder:[i,l,n]},conditional:{template:a+"section.html",builder:[i,l,n]},actions:{template:a+"actions.html",builder:g},select:{template:a+"select.html",builder:g},checkbox:{template:a+"checkbox.html",builder:g},checkboxes:{template:a+"checkboxes.html",builder:[i,r,o,m,n]},number:{template:a+"default.html",builder:g},measurement:{template:a+"measurement.html",builder:[i,o,r,n,d,c,b,p]},password:{template:a+"default.html",builder:g},submit:{template:a+"submit.html",builder:g},button:{template:a+"submit.html",builder:g},radios:{template:a+"radios.html",builder:g},"radios-inline":{template:a+"radios-inline.html",builder:g},radiobuttons:{template:a+"radio-buttons.html",builder:g},help:{template:a+"help.html",builder:g},"default":{template:a+"default.html",builder:g}},[])}]),app.filter("alphaNumeric",function(){return function(e){return e.replace(/\W/g,"")}}),window.addEventListener("scroll",function(){markActiveTab()}),window.addEventListener("click",function(){markActiveTab()}),app.filter("range",function(){return function(e,t){t=parseInt(t);for(var s=0;t>s;s++)e.push(s);return e}});